"use strict";function init(){var e;arguments.length>0&&void 0!==arguments[0]&&arguments[0];e=function(){var e=function(e,t){Object.keys(e).forEach(function(r){var o=e[r];t.observe(o)})};if("undefined"!=typeof IntersectionObserver){var t=new IntersectionObserver(function(e){Object.keys(e).forEach(function(r){if(e[r].isIntersecting){var o=e[r].target,n=o.getAttribute("data-src");o.src=n,o.removeAttribute("data-src"),t.unobserve(o)}})},{}),r=new IntersectionObserver(function(e){Object.keys(e).forEach(function(t){if(e[t].isIntersecting){var o=e[t].target,n=o.getAttribute("data-src");o.setAttribute("style","background-image: url('".concat(n,"');")),o.removeAttribute("data-src"),r.unobserve(o)}})},{}),o=document.querySelectorAll(".progressive-img img[data-src]");e(o,t);var n=document.querySelectorAll(".progressive-img div[data-src]");e(n,r);if("undefined"!=typeof MutationObserver){var a=new MutationObserver(function(o,n){console.log("mutationsList",o);for(var a=0;a<o.length;a++)o[a].addedNodes&&o[a].addedNodes.length>0&&function(){var n=o[a].addedNodes;Object.keys(n).forEach(function(o){var a=n[o];if(a.nodeType===Node.ELEMENT_NODE){var i=a.querySelectorAll(".progressive-img img[data-src]");e(i,t);var c=a.querySelectorAll(".progressive-img div[data-src]");e(c,r)}})}()}),i=document.getElementsByTagName("body")[0];a.observe(i,{childList:!0,subtree:!0})}}else{var c=document.querySelectorAll(".progressive-img img[data-src]");Object.keys(c).forEach(function(e){var t=c[e],r=t.getAttribute("data-src");t.src=r});var s=document.querySelectorAll(".progressive-img div[data-src]");Object.keys(s).forEach(function(e){var t=s[e],r=t.getAttribute("data-src");t.setAttribute("style","background-image: url('".concat(r,"');"))})}},"interactive"===document.readyState||"complete"===document.readyState?e():document.addEventListener("DOMContentLoaded",e)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=init;